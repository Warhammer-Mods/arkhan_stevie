name: Lua lint

on: 
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'hotfix/**'
      - 'bugfix/**'
      - 'support/**'
      - 'update/**'
    paths:
      - 'script/**'
      - '.luacheckrc'
      - '.vscode/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'hotfix/**'
      - 'bugfix/**'
      - 'support/**'
      - 'update/**'
  workflow_dispatch:

env:
  FILES_TO_CHECK: >-
    script/
  GIT_AUTHOR_NAME: "github-actions[bot]"
  GIT_AUTHOR_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
  GIT_COMMITTER_NAME: "github-actions[bot]"
  GIT_COMMITTER_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
  VENDOR_PATH: .luarocks
  SHOW_GLOBALS_SCRIPT: .github/show_globals.lua
  UPDATE_LUA_GLOBALS_SCRIPT: .github/update_lua_globals.sh
  LUACHECK_CONFIG: >-
    .luacheckrc
  LUA_VERSION: "5.1"
  LUAROCKS_VERSION: "3.7.0"
  CUSTOM_LUA_GLOBALS: >-
    arkhan_expanded

jobs:

  lint:
    runs-on: ubuntu-latest
    outputs:
      clean: ${{ steps.changes.outputs.clean }}
      files: ${{ steps.changes.outputs.files }}

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
        fetch-depth: 0

    - uses: leafo/gh-actions-lua@v8.0.0
      with:
        luaVersion: ${{ env.LUA_VERSION }}
        
    - uses: leafo/gh-actions-luarocks@v4.1.0
      with:
        luarocksVersion: ${{ env.LUAROCKS_VERSION }}
        
    - name: Install luacheck
      run: luarocks install luacheck

    - name: Install
      run: luarocks install --tree ${{ env.VENDOR_PATH }} --only-deps *.rockspec

    - name: Set Lua globals from vendor path
      id: lua-globals
      run: |
        chmod +x ${{ env.UPDATE_LUA_GLOBALS_SCRIPT }}
        ./${{ env.UPDATE_LUA_GLOBALS_SCRIPT }}

    - name: Get file changes
      id: changes
      run: |
        files_to_commit="${LUACHECK_CONFIG}"
        changes="$(git status --porcelain=1 ${files_to_commit})"
        echo "::debug::${changes}"
        if [ -z "${changes}" ]; then
          echo "::set-output name=clean::true"
        else
          files=()
          changes_tracked="$(git status --porcelain=1 --untracked-files=no ${files_to_commit})"
          og_IFS=$IFS
          IFS='\n'
          [[ -z $changes_tracked ]] || \
          for line in "${changes_tracked}"; do
            file=$(cut -d" " -f3 <<< ${line})
            files+=("${file}")
            echo "::notice file=${file}::File changed: ${file}"
            echo "::debug::$(git diff ${file})"
          done
          changes_untracked="$(git ls-files --others --exclude-standard ${files_to_commit})"
          [[ -z $changes_untracked ]] || \
          for file in "${changes_untracked}"; do
            files+=("${file}")
            echo "::notice file=${file}::New file: ${file}"
            echo "::debug::$(git diff ${file})"
          done
          IFS=$og_IFS
          echo "::group::Total files changed"
          for file in ${files[@]}; do
            echo "${file}"
          done
          echo "::endgroup::"
          echo "::notice::clean: false"
          echo "::set-output name=files::${files[@]}"
          echo "::set-output name=clean::false"
        fi

    - name: Luacheck Lint
      id: luacheck
      shell: bash --noprofile --norc {0}
      run: |
        echo "::add-matcher::.github/luacheck-plain.json"
        luacheck ${{ env.FILES_TO_CHECK }} \
          --formatter plain \
          --codes --ranges
        exitcode=$?
        echo "::remove-matcher owner=luacheck-plain_error::"
        echo "::remove-matcher owner=luacheck-plain_warning::"
        if [ "$exitcode" -gt 1 ]; then
          exit $exitcode;
        else
          exit 0;
        fi

    - name: Upload updated files
      if: steps.changes.outputs.clean == 'false'
      uses: actions/upload-artifact@v2
      with:
        name: luacheckrc
        path: ${{ steps.changes.outputs.files }}

  create-pr:
    runs-on: ubuntu-latest
    needs: lint
    if: needs.lint.outputs.clean == 'false'

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Download updated files
      uses: actions/download-artifact@v2
      with:
        name: luacheckrc

    - name: Commit files
      id: commit
      run: |
        git config --local user.email ${{ env.GIT_AUTHOR_EMAIL }}
        git config --local user.name ${{ env.GIT_AUTHOR_NAME }}
        git add ${{ needs.lint.outputs.files }}
        git commit -m "[Luacheck] Update config and autocomplete"

    - name: Create a PR
      id: pr
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.BOT_TOKEN }}
        committer: ${{ format( '{0} <{1}>', env.GIT_COMMITTER_NAME, env.GIT_COMMITTER_EMAIL) }}
        author: ${{ format( '{0} <{1}>', env.GIT_AUTHOR_NAME, env.GIT_AUTHOR_EMAIL) }}
        branch: bot/autocomplete-patch
        branch-suffix: short-commit-hash
        delete-branch: true
        signoff: false
        title: "[Luacheck] Update config and autocomplete"
        body: |
          **Update**:
            - Luacheck globals list
        labels: |
          automation
          dep

    - name: Show info
      run: |
        echo "::notice::${{ format(
          'Pull request #{0} is {1}: {2}',
          steps.pr.outputs.pull-request-number,
          steps.pr.outputs.pull-request-operation,
          steps.pr.outputs.pull-request-url
        ) }}"
