name: DB check

on: 
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'hotfix/**'
      - 'bugfix/**'
      - 'support/**'
      - 'update/**'
    paths:
      - 'db/**'
  pull_request:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'hotfix/**'
      - 'bugfix/**'
      - 'support/**'
      - 'update/**'
    paths:
      - 'db/**'
  workflow_dispatch:

env:
  FILES_TO_CHECK: >-
    db
  GIT_AUTHOR_NAME: "github-actions[bot]"
  GIT_AUTHOR_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
  GIT_COMMITTER_NAME: "github-actions[bot]"
  GIT_COMMITTER_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"

jobs:

  db-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Normalize LF/CRLF
      run: |
        for path in ${FILES_TO_CHECK}; do
          if [[ -d ${path} ]]; then
            find ${path} -type f -iname "*.tsv" -exec dos2unix {} \;
          elif [[ -f ${path} ]]; then
            dos2unix ${path}
          fi
        done 


    - name: Setup Node.js
      uses: actions/setup-node@v2

    - run: npm install --global csval

    - name: Check TSV syntax
      run: |
        for path in ${FILES_TO_CHECK}; do
          if [[ -d ${path} ]]; then
            find ${path} -type f -iname "*.tsv" -exec csval {} \;
          elif [[ -f ${path} ]]; then
            csval ${path}
          fi
        done 

    - name: Get file changes
      id: changes
      run: |
        changes="$(git status --porcelain=1 ${FILES_TO_CHECK})"
        echo "::debug::${changes}"
        if [ -z "${changes}" ]; then
          echo "::set-output name=clean::true"
        else
          files=()
          while IFS= read -r line; do
            file=$(cut -d" " -f3 <<< ${line})
            files+=("${file}")
            echo "::notice file=${file}::File changed: ${line}"
            echo "::debug::$(git diff ${file})"
          done <<< ${changes}
          echo "::set-output name=files::${files[@]}"
          echo "::set-output name=clean::false"
        fi

    - name: Upload DBs
      if: steps.changes.outputs.clean == 'false'
      uses: actions/upload-artifact@v2
      with:
        name: fixed-dbs
        path: ${{ steps.changes.outputs.files }}

  create-pr:
    runs-on: ubuntu-latest
    needs: db-check
    if: needs.db-check.outputs.clean == 'false'

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Download DBs
      uses: actions/download-artifact@v2
      with:
        name: fixed-dbs

    - name: Commit files
      id: commit
      run: |
        git config --local user.email ${{ env.GIT_AUTHOR_EMAIL }}
        git config --local user.name ${{ env.GIT_AUTHOR_NAME }}
        git add ${FILES_TO_CHECK}
        git commit -m "[DB Check] Fix DBs"
        if ${{ startsWith(github.ref, 'refs/tags/') }}; then
          git tag -fa ${{ github.ref }}
        fi

    - name: Create a PR
      id: pr
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.BOT_TOKEN }}
        committer: ${{ format( '{0} <{1}>', env.GIT_COMMITTER_NAME, env.GIT_COMMITTER_EMAIL) }}
        author: ${{ format( '{0} <{1}>', env.GIT_AUTHOR_NAME, env.GIT_AUTHOR_EMAIL) }}
        branch: bot/tsv-patch
        branch-suffix: short-commit-hash
        delete-branch: true
        signoff: false
        title: "[DB Check] Fix DBs"
        body: |
          **Fixes**:
            - Line ending normalization
        labels: |
          automation

    - name: Show info
      run: |
        echo "::notice::${{ format(
          'Pull request #{0} is {1}: {2}',
          steps.pr.outputs.pull-request-number,
          steps.pr.outputs.pull-request-operation,
          steps.pr.outputs.pull-request-url
        ) }}"

    - name: Enable Pull Request Automerge
      if: steps.pr.outputs.pull-request-operation == 'created'
      uses: peter-evans/enable-pull-request-automerge@v1
      with:
        token: ${{ secrets.BOT_TOKEN }}
        pull-request-number: ${{ steps.pr.outputs.pull-request-number }}
        merge-method: squash
