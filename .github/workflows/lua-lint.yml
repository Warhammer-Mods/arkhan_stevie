name: Lua lint

on: 
  push:
    paths:
      - 'script/**'
      - '.luacheckrc'
      - '.vscode/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'script/**'
      - '.luacheckrc'
      - '.vscode/**'
      - '.github/workflows/**'
  workflow_dispatch:

env:
  FILES_TO_CHECK: >-
    script
  VENDOR_PATH: .vscode/autocomplete
  LUA_VERSION: "5.1"
  LUAROCKS_VERSION: "3.7.0"
  LUACHECK_CONFIG: .luacheckrc
  CUSTOM_LUA_GLOBALS: >-
    ardm

jobs:

  lint:
    runs-on: ubuntu-latest
    outputs:
      clean: ${{ steps.lua-globals.outputs.clean }}

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Cache lua environment
      uses: actions/cache@v2
      env:
        cache-name: cache-lua
      with:
        path: |
          .install
          .lua
        key: ${{ runner.os }}-lua-${{ env.LUA_VERSION }}
        restore-keys: |
          ${{ runner.os }}-lua-

    - name: Cache luarocks installation
      uses: actions/cache@v2
      env:
        cache-name: cache-luarocks
      with:
        path: .luarocks
        key: ${{ runner.os }}-luarocks-${{ env.LUAROCKS_VERSION }}
        restore-keys: |
          ${{ runner.os }}-luarocks-

    - uses: leafo/gh-actions-lua@v8.0.0
      with:
        luaVersion: ${{ env.LUA_VERSION }}
        
    - uses: leafo/gh-actions-luarocks@v4.1.0
      with:
        luarocksVersion: ${{ env.LUAROCKS_VERSION }}
        
    - name: Install luacheck
      run: luarocks install luacheck

    - name: Reset autocomplete
      run: rm -rfv ${{ env.VENDOR_PATH }}

    - name: Checkout PJ-autocomplete
      uses: actions/checkout@v2
      with:
        repository: Warhammer-Mods/PJ-autocomplete
        path: ${{ env.VENDOR_PATH }}

    - name: Remove PJ-autocomplete meta files
      run: rm -rf ${{ env.VENDOR_PATH }}/{.git,.github}

    - name: Set Lua globals from vendor path
      id: lua-globals
      run: |
        chmod +x .vscode/update_lua_globals.sh
        .vscode/update_lua_globals.sh
        changes="$(git status --porcelain=1 ${VENDOR_PATH} ${LUACHECK_CONFIG})"
        echo "::debug::${changes}"
        if [ -z "${changes}" ]; then
          echo "::set-output name=clean::true"
        else
          while IFS= read -r line; do
            file=$(cut -d" " -f3 <<< ${line})
            echo "::notice file=${file}::File changed: ${line}"
            echo "::debug::$(git diff ${file})"
          done <<< ${changes}
          echo "::set-output name=clean::false"
        fi

    - name: Luacheck Lint
      id: luacheck
      shell: bash --noprofile --norc {0}
      run: |
        mkdir output
        echo "::add-matcher::.github/luacheck-plain.json"
        luacheck ${{ env.FILES_TO_CHECK }} \
          --formatter plain \
          --codes --ranges
        exitcode=${PIPESTATUS[0]}
        echo "::remove-matcher owner=luacheck-plain_error::"
        echo "::remove-matcher owner=luacheck-plain_warning::"
        if [ "$exitcode" -gt 1 ]; then
          exit $exitcode;
        else
          exit 0;
        fi

    - name: Upload .luacheckrc
      if: steps.lua-globals.outputs.clean
      uses: actions/upload-artifact@v2
      with:
        name: luacheckrc
        path: .luacheckrc

  push:
    runs-on: ubuntu-latest
    needs: lint
    if: needs.lint.outputs.clean == 'false'

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Reset autocomplete
      run: rm -rfv ${{ env.VENDOR_PATH }}

    - name: Checkout PJ-autocomplete
      uses: actions/checkout@v2
      with:
        repository: Warhammer-Mods/PJ-autocomplete
        path: ${{ env.VENDOR_PATH }}

    - name: Remove PJ-autocomplete meta files
      run: rm -rf ${{ env.VENDOR_PATH }}/{.git,.github}

    - name: Download .luacheckrc
      uses: actions/download-artifact@v2
      with:
        name: luacheckrc

    - name: Commit files
      id: commit
      run: |
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add ${VENDOR_PATH} ${LUACHECK_CONFIG}
        git commit -m "Update luacheck config"
        if ${{ startsWith(github.ref, 'refs/tags/') }}; then
          git tag -fa ${{ github.ref }}
        fi

    - name: Push changes
      uses: ad-m/github-push-action@8407731efefc0d8f72af254c74276b7a90be36e1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        tags: true
