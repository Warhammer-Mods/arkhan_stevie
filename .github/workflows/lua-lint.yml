name: Lua lint

on: 
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'hotfix/**'
      - 'bugfix/**'
      - 'support/**'
      - 'update/**'
    paths:
      - 'script/**'
      - '.luacheckrc'
      - '.vscode/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'hotfix/**'
      - 'bugfix/**'
      - 'support/**'
      - 'update/**'
  workflow_dispatch:

env:
  # Include these files as regular expression
  FILES_TO_CHECK: script/.*
  GIT_AUTHOR_NAME: "github-actions[bot]"
  GIT_AUTHOR_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
  GIT_COMMITTER_NAME: "github-actions[bot]"
  GIT_COMMITTER_EMAIL: "41898282+github-actions[bot]@users.noreply.github.com"
  VENDOR_PATH: .github/autocomplete
  SHOW_GLOBALS_SCRIPT: .github/show_globals.lua
  UPDATE_LUA_GLOBALS_SCRIPT: .github/update_lua_globals.sh
  LUACHECK_CONFIG: >-
    .luacheckrc
    .github/linters/.luacheckrc
  CUSTOM_LUA_GLOBALS: >-
    ae
    ardm

jobs:

  lint:
    runs-on: ubuntu-latest
    outputs:
      clean: ${{ steps.changes.outputs.clean }}

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Reset autocomplete
      run: rm -rfv ${{ env.VENDOR_PATH }}

    - name: Checkout PJ-autocomplete
      uses: actions/checkout@v2
      with:
        repository: Warhammer-Mods/PJ-autocomplete
        path: ${{ env.VENDOR_PATH }}

    - name: Remove PJ-autocomplete meta files
      run: rm -rf ${{ env.VENDOR_PATH }}/{.git,.github,.vscode}

    - name: Set Lua globals from vendor path
      id: lua-globals
      run: |
        chmod +x ${{ env.UPDATE_LUA_GLOBALS_SCRIPT }}
        ${{ env.UPDATE_LUA_GLOBALS_SCRIPT }}

    - name: Get file changes
      id: changes
      run: |
        changes="$(git status --porcelain=1 ${VENDOR_PATH} ${LUACHECK_CONFIG})"
        echo "::debug::${changes}"
        if [ -z "${changes}" ]; then
          echo "::set-output name=clean::true"
        else
          files=()
          while IFS= read -r line; do
            file=$(cut -d" " -f3 <<< ${line})
            files+=("${file}")
            echo "::notice file=${file}::File changed: ${line}"
            echo "::debug::$(git diff ${file})"
          done <<< ${changes}
          echo "::set-output name=files::${files[@]}"
          echo "::set-output name=clean::false"
        fi

    - name: Lua Lint
      uses: github/super-linter/slim@v4
      env:
        VALIDATE_ALL_CODEBASE: true
        VALIDATE_LUA: true
        DEFAULT_BRANCH: master
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        FILTER_REGEX_INCLUDE: ${{ env.FILES_TO_CHECK }}
        USE_FIND_ALGORITHM: true

    - name: Upload updated files
      if: steps.changes.outputs.clean == 'false'
      uses: actions/upload-artifact@v2
      with:
        name: luacheckrc
        path: ${{ env.LUACHECK_CONFIG }}

  create-pr:
    runs-on: ubuntu-latest
    needs: lint
    if: needs.lint.outputs.clean == 'false'

    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
        fetch-depth: 0

    - name: Reset autocomplete
      run: rm -rfv ${{ env.VENDOR_PATH }}

    - name: Checkout PJ-autocomplete
      uses: actions/checkout@v2
      with:
        repository: Warhammer-Mods/PJ-autocomplete
        path: ${{ env.VENDOR_PATH }}

    - name: Remove PJ-autocomplete meta files
      run: rm -rf ${{ env.VENDOR_PATH }}/{.git,.github}

    - name: Download updated files
      uses: actions/download-artifact@v2
      with:
        name: luacheckrc

    - name: Commit files
      id: commit
      run: |
        git config --local user.email ${{ env.GIT_AUTHOR_EMAIL }}
        git config --local user.name ${{ env.GIT_AUTHOR_NAME }}
        git add ${VENDOR_PATH} ${LUACHECK_CONFIG}
        git commit -m "[Luacheck] Update config and autocomplete"
        if ${{ startsWith(github.ref, 'refs/tags/') }}; then
          git tag -fa ${{ github.ref }}
        fi

    - name: Create a PR
      id: pr
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.BOT_TOKEN }}
        committer: ${{ format( '{0} <{1}>', env.GIT_COMMITTER_NAME, env.GIT_COMMITTER_EMAIL) }}
        author: ${{ format( '{0} <{1}>', env.GIT_AUTHOR_NAME, env.GIT_AUTHOR_EMAIL) }}
        branch: bot/autocomplete-patch
        branch-suffix: short-commit-hash
        delete-branch: true
        signoff: false
        title: "[Luacheck] Update config and autocomplete"
        body: |
          **Update**:
            - Total War Lua autocompletion
            - Luacheck globals list
        labels: |
          automation
          dep

    - name: Show info
      run: |
        echo "::notice::${{ format(
          'Pull request #{0} is {1}: {2}',
          steps.pr.outputs.pull-request-number,
          steps.pr.outputs.pull-request-operation,
          steps.pr.outputs.pull-request-url
        ) }}"
